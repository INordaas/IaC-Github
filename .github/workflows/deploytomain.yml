name: Main deploy

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIEND_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  WORKING_DIR: ./isakn-oppg2/deployments

jobs:
  dev_stage:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ${{ env.WORKING_DIR }}

    - name: Terraform workspace select or create
      run: terraform workspace select dev || terraform workspace new dev
      working-directory: ${{ env.WORKING_DIR }}

    - name: Terraform Apply dev
      run: terraform apply -auto-approve -var-file="terraform.tfvars.dev"
      working-directory: ${{ env.WORKING_DIR }}

  prod_stage:
    needs: dev_stage
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ${{ env.WORKING_DIR }}

    - name: Terraform workspace select or create
      run: terraform workspace select staging || terraform workspace new staging
      working-directory: ${{ env.WORKING_DIR }}


    - name: Terraform Apply staging
      run: terraform apply -auto-approve -lock=false -var-file="terraform.tfvars.staging"
      working-directory: ${{ env.WORKING_DIR }}

  prod:
    needs: prod_stage
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ${{ env.WORKING_DIR }}

    - name: Terraform workspace select or create
      run: terraform workspace select prod || terraform workspace new prod
      working-directory: ${{ env.WORKING_DIR }}

    - name: Terraform Plan
      run: terraform plan -out=tfplan -var-file="terraform.tfvars.prod"
      working-directory: ${{ env.WORKING_DIR }}

    - name: Terraform Apply prod
      run: terraform apply -auto-approve -var-file="terraform.tfvars.prod"
      working-directory: ${{ env.WORKING_DIR }}
